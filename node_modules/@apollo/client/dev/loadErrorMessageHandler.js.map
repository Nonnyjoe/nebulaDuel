{"version":3,"file":"loadErrorMessageHandler.js","sourceRoot":"","sources":["../../src/dev/loadErrorMessageHandler.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,+BAA+B,CAAC;AACvD,OAAO,EAAE,yBAAyB,EAAE,MAAM,2CAA2C,CAAC;AAEtF,MAAM,UAAU,uBAAuB;IAAC,oBAA2B;SAA3B,UAA2B,EAA3B,qBAA2B,EAA3B,IAA2B;QAA3B,+BAA2B;;IACjE,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,EAAE,CAAC;QACvC,MAAM,CAAC,yBAAyB,CAAC,GAAG,OAAsC,CAAC;IAC7E,CAAC;IAED,KAAoB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU,EAAE,CAAC;QAA5B,IAAM,KAAK,mBAAA;QACd,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,yBAAyB,CAAC,EAAE,KAAK,CAAC,CAAC;IAC1D,CAAC;IAED,OAAO,MAAM,CAAC,yBAAyB,CAAC,CAAC;IAEzC,SAAS,OAAO,CAAC,OAAwB,EAAE,IAAe;QACxD,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE,CAAC;YAChC,IAAM,UAAU,GAAG,MAAM,CAAC,yBAAyB,CAAE,CAAC,OAAO,CAAC,CAAC;YAC/D,IAAI,CAAC,OAAO,IAAI,CAAC,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO,CAAA;gBAAE,OAAO;YAC7C,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QAC/B,CAAC;QACD,OAAO,IAAI,CAAC,MAAM,CAChB,UAAC,GAAG,EAAE,GAAG,IAAK,OAAA,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,EAAnC,CAAmC,EACjD,MAAM,CAAC,OAAO,CAAC,CAChB,CAAC;IACJ,CAAC;AACH,CAAC","sourcesContent":["import type { ErrorCodes } from \"../invariantErrorCodes.js\";\nimport { global } from \"../utilities/globals/index.js\";\nimport { ApolloErrorMessageHandler } from \"../utilities/globals/invariantWrappers.js\";\n\nexport function loadErrorMessageHandler(...errorCodes: ErrorCodes[]) {\n  if (!global[ApolloErrorMessageHandler]) {\n    global[ApolloErrorMessageHandler] = handler as typeof handler & ErrorCodes;\n  }\n\n  for (const codes of errorCodes) {\n    Object.assign(global[ApolloErrorMessageHandler], codes);\n  }\n\n  return global[ApolloErrorMessageHandler];\n\n  function handler(message: string | number, args: unknown[]) {\n    if (typeof message === \"number\") {\n      const definition = global[ApolloErrorMessageHandler]![message];\n      if (!message || !definition?.message) return;\n      message = definition.message;\n    }\n    return args.reduce<string>(\n      (msg, arg) => msg.replace(/%[sdfo]/, String(arg)),\n      String(message)\n    );\n  }\n}\n"]}