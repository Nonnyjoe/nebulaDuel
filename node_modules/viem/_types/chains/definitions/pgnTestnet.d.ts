export declare const pgnTestnet: {
    blockExplorers: {
        readonly default: {
            readonly name: "PGN Testnet Explorer";
            readonly url: "https://explorer.sepolia.publicgoods.network";
            readonly apiUrl: "https://explorer.sepolia.publicgoods.network/api";
        };
        readonly blocksout: {
            readonly name: "PGN Testnet Explorer";
            readonly url: "https://explorer.sepolia.publicgoods.network";
            readonly apiUrl: "https://explorer.sepolia.publicgoods.network/api";
        };
    };
    contracts: {
        readonly l2OutputOracle: {
            readonly 11155111: {
                readonly address: "0xD5bAc3152ffC25318F848B3DD5dA6C85171BaEEe";
            };
        };
        readonly multicall3: {
            readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
            readonly blockCreated: 3754925;
        };
    };
    id: 58008;
    name: "PGN ";
    nativeCurrency: {
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://sepolia.publicgoods.network"];
        };
    };
    sourceId: 11155111;
    testnet: true;
    formatters: {
        readonly block: {
            exclude: [] | undefined;
            format: (args: import("../index.js").Assign<Partial<import("../../index.js").RpcBlock>, import("../index.js").OpStackRpcBlockOverrides & {
                transactions: `0x${string}`[] | import("../index.js").OpStackRpcTransaction[];
            }>) => {
                baseFeePerGas: bigint | null;
                difficulty: bigint;
                extraData: `0x${string}`;
                gasLimit: bigint;
                gasUsed: bigint;
                hash: `0x${string}` | null;
                logsBloom: `0x${string}` | null;
                miner: `0x${string}`;
                mixHash: `0x${string}`;
                nonce: `0x${string}` | null;
                number: bigint | null;
                parentHash: `0x${string}`;
                receiptsRoot: `0x${string}`;
                sealFields: `0x${string}`[];
                sha3Uncles: `0x${string}`;
                size: bigint;
                stateRoot: `0x${string}`;
                timestamp: bigint;
                totalDifficulty: bigint | null;
                transactions: `0x${string}`[] | import("../index.js").OpStackTransaction[];
                transactionsRoot: `0x${string}`;
                uncles: `0x${string}`[];
                withdrawals?: import("../../index.js").Withdrawal[] | undefined;
                withdrawalsRoot?: `0x${string}` | undefined;
            } & {};
            type: "block";
        };
        readonly transaction: {
            exclude: [] | undefined;
            format: (args: ({
                yParity?: `0x${string}` | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                v?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x7e" | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: undefined;
                chainId?: `0x${string}` | undefined;
            } & import("../index.js").Omit<import("../index.js").PartialBy<import("../../index.js").TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                yParity?: `0x${string}` | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                v?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x7e" | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<import("../../index.js").TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & import("../../index.js").FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                yParity?: `0x${string}` | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                v?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x7e" | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: import("../../index.js").AccessList | undefined;
                chainId?: `0x${string}` | undefined;
            } & import("../index.js").Omit<import("../index.js").PartialBy<import("../../index.js").TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                yParity?: `0x${string}` | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                v?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x7e" | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: import("../../index.js").AccessList | undefined;
                chainId?: `0x${string}` | undefined;
            } & import("../index.js").Omit<import("../index.js").PartialBy<import("../../index.js").TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                yParity?: `0x${string}` | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                v?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x7e" | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: import("../../index.js").AccessList | undefined;
                chainId?: `0x${string}` | undefined;
            } & import("../index.js").Omit<import("../index.js").PartialBy<import("../../index.js").TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                yParity?: `0x${string}` | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                v?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x7e" | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: import("../../index.js").AccessList | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<import("../../index.js").TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & import("../../index.js").FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            }) | ({
                yParity?: `0x${string}` | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                v?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x7e" | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: import("../../index.js").AccessList | undefined;
                chainId?: `0x${string}` | undefined;
            } & import("../index.js").Omit<import("../index.js").PartialBy<import("../../index.js").TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                yParity?: `0x${string}` | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                v?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x7e" | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: import("../../index.js").AccessList | undefined;
                chainId?: `0x${string}` | undefined;
            } & import("../index.js").Omit<import("../index.js").PartialBy<import("../../index.js").TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                yParity?: `0x${string}` | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                v?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x7e" | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: import("../../index.js").AccessList | undefined;
                chainId?: `0x${string}` | undefined;
            } & import("../index.js").Omit<import("../index.js").PartialBy<import("../../index.js").TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            }) | ({
                yParity?: `0x${string}` | undefined;
                blockHash?: `0x${string}` | null | undefined;
                blockNumber?: `0x${string}` | null | undefined;
                from?: `0x${string}` | undefined;
                gas?: `0x${string}` | undefined;
                hash?: `0x${string}` | undefined;
                input?: `0x${string}` | undefined;
                nonce?: `0x${string}` | undefined;
                r?: `0x${string}` | undefined;
                s?: `0x${string}` | undefined;
                to?: `0x${string}` | null | undefined;
                transactionIndex?: `0x${string}` | null | undefined;
                v?: `0x${string}` | undefined;
                value?: `0x${string}` | undefined;
                type?: "0x0" | "0x1" | "0x2" | "0x7e" | undefined;
                gasPrice?: `0x${string}` | undefined;
                maxFeePerGas?: `0x${string}` | undefined;
                maxPriorityFeePerGas?: `0x${string}` | undefined;
                accessList?: import("../../index.js").AccessList | undefined;
                chainId?: `0x${string}` | undefined;
            } & Omit<import("../../index.js").TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & import("../../index.js").FeeValuesEIP1559<`0x${string}`> & {
                isSystemTx?: boolean | undefined;
                mint?: `0x${string}` | undefined;
                sourceHash: `0x${string}`;
                type: "0x7e";
            })) => ({
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                gasPrice: bigint;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList?: undefined;
                chainId?: number | undefined;
                yParity?: undefined;
                type: "legacy";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                gasPrice: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList?: undefined;
                chainId?: number | undefined;
                yParity: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerGas?: undefined;
                maxPriorityFeePerGas?: undefined;
                accessList: import("../../index.js").AccessList;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: import("../../index.js").AccessList;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: import("../../index.js").AccessList;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice: bigint;
                maxFeePerGas: undefined;
                maxPriorityFeePerGas: undefined;
                accessList: import("../../index.js").AccessList;
                chainId: number;
                type: "eip2930";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: import("../../index.js").AccessList;
                chainId: number;
                type: "eip1559";
                isSystemTx?: undefined;
                mint?: undefined;
                sourceHash?: undefined;
            } | {
                blockHash: `0x${string}` | null;
                blockNumber: bigint | null;
                from: `0x${string}`;
                gas: bigint;
                hash: `0x${string}`;
                input: `0x${string}`;
                nonce: number;
                r: `0x${string}`;
                s: `0x${string}`;
                to: `0x${string}` | null;
                transactionIndex: number | null;
                typeHex: `0x${string}` | null;
                v: bigint;
                value: bigint;
                yParity: number;
                gasPrice?: undefined;
                maxFeePerGas: bigint;
                maxPriorityFeePerGas: bigint;
                accessList: import("../../index.js").AccessList;
                chainId: number;
                type: "deposit";
                isSystemTx?: boolean | undefined;
                mint?: bigint | undefined;
                sourceHash: `0x${string}`;
            }) & {};
            type: "transaction";
        };
        readonly transactionReceipt: {
            exclude: [] | undefined;
            format: (args: import("../index.js").Assign<Partial<import("../../index.js").RpcTransactionReceipt>, import("../index.js").OpStackRpcTransactionReceiptOverrides>) => {
                blockHash: `0x${string}`;
                blockNumber: bigint;
                contractAddress: `0x${string}` | null;
                cumulativeGasUsed: bigint;
                effectiveGasPrice: bigint;
                from: `0x${string}`;
                gasUsed: bigint;
                logs: import("../../index.js").Log<bigint, number, false>[];
                logsBloom: `0x${string}`;
                status: "success" | "reverted";
                to: `0x${string}` | null;
                transactionHash: `0x${string}`;
                transactionIndex: number;
                type: import("../../index.js").TransactionType;
                l1GasPrice: bigint | null;
                l1GasUsed: bigint | null;
                l1Fee: bigint | null;
                l1FeeScalar: number | null;
            } & {};
            type: "transactionReceipt";
        };
    };
    serializers?: import("../../index.js").ChainSerializers<undefined> | undefined;
    fees?: import("../../index.js").ChainFees<undefined> | undefined;
    readonly network: "pgn-testnet";
};
//# sourceMappingURL=pgnTestnet.d.ts.map